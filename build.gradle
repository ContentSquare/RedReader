buildscript {
    repositories {
        jcenter()
		google()
        maven { url 'https://maven.fabric.io/public' }
    }
    dependencies {
		classpath 'com.android.tools.build:gradle:3.1.2'
		classpath "io.fabric.tools:gradle:${fabricPluginVersion}"
    }
}

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'pmd'

repositories {
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
}

dependencies {

	implementation project(':library')

	compile "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
	compile "org.apache.commons:commons-lang3:${apacheCommonsVersion}"
	compile "joda-time:joda-time:${jodaTimeVersion}"
	compile "com.android.support:appcompat-v7:${supportLibVersion}"
	compile "com.android.support:recyclerview-v7:${supportLibVersion}"
	compile "com.android.support:design:${supportLibVersion}"
	compile "com.squareup.okhttp:okhttp:${okHttpVersion}"
	compile "info.guardianproject.netcipher:netcipher:${netCipherVersion}"

    testCompile "junit:junit:${jUnitVersion}"
    compile("com.crashlytics.sdk.android:crashlytics:${crashlyticsVersion}@aar") {
        transitive = true;
    }
}

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    signingConfigs {
        release {
            storeFile file("${rootDir}/config/keystore/shared-keystore.jks")
            storePassword "Weballwin"
            keyAlias "Jenkins"
            keyPassword "Weballwin"
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    defaultConfig {
        vectorDrawables.generatedDensities = ['mdpi', 'hdpi', 'xhdpi', 'xxhdpi', 'xxxhdpi']
    }
    // Flag to tell aapt to keep the attribute ids around
    aaptOptions {
        additionalParameters "--no-version-vectors"
    }

    buildTypes {
        release {
            minifyEnabled true
        }
    }

    compileOptions {
        compileOptions.encoding = "UTF-8"

        // Use Java 1.7, requires minSdk 8
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    
    lintOptions {
        checkReleaseBuilds false
        abortOnError false

        // Translations are crowd-sourced
        disable 'MissingTranslation'
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    sourceSets {
        main {
            assets.srcDirs = ['assets']
        }
    }
}

pmd {
    toolVersion = pmdVersion
    consoleOutput = true
}

task pmd(type: Pmd) {
    dependsOn 'assembleDebug'
    ruleSetFiles = files("${project.rootDir}/config/pmd/rules.xml")
    ruleSets = [] // otherwise defaults clash with the list in rules.xml
    source 'src/main/java/org/quantumbadger'
    include '**/*.java'
}
